/*
 * Generated by the Jasper component of Apache Tomcat
 * Version: Apache Tomcat/7.0.73
 * Generated at: 2021-12-24 03:05:36 UTC
 * Note: The last modified time of this file was set to
 *       the last modified time of the source file after
 *       generation to assist with modification tracking.
 */
package org.apache.jsp.myPage;

import javax.servlet.*;
import javax.servlet.http.*;
import javax.servlet.jsp.*;
import vlog.vo.SharejoinVO;
import java.util.List;
import vlog.vo.CommonVO;
import vlog.vo.StudentVO;

public final class studentPage_jsp extends org.apache.jasper.runtime.HttpJspBase
    implements org.apache.jasper.runtime.JspSourceDependent {

  private static final javax.servlet.jsp.JspFactory _jspxFactory =
          javax.servlet.jsp.JspFactory.getDefaultFactory();

  private static java.util.Map<java.lang.String,java.lang.Long> _jspx_dependants;

  private volatile javax.el.ExpressionFactory _el_expressionfactory;
  private volatile org.apache.tomcat.InstanceManager _jsp_instancemanager;

  public java.util.Map<java.lang.String,java.lang.Long> getDependants() {
    return _jspx_dependants;
  }

  public javax.el.ExpressionFactory _jsp_getExpressionFactory() {
    if (_el_expressionfactory == null) {
      synchronized (this) {
        if (_el_expressionfactory == null) {
          _el_expressionfactory = _jspxFactory.getJspApplicationContext(getServletConfig().getServletContext()).getExpressionFactory();
        }
      }
    }
    return _el_expressionfactory;
  }

  public org.apache.tomcat.InstanceManager _jsp_getInstanceManager() {
    if (_jsp_instancemanager == null) {
      synchronized (this) {
        if (_jsp_instancemanager == null) {
          _jsp_instancemanager = org.apache.jasper.runtime.InstanceManagerFactory.getInstanceManager(getServletConfig());
        }
      }
    }
    return _jsp_instancemanager;
  }

  public void _jspInit() {
  }

  public void _jspDestroy() {
  }

  public void _jspService(final javax.servlet.http.HttpServletRequest request, final javax.servlet.http.HttpServletResponse response)
        throws java.io.IOException, javax.servlet.ServletException {

    final javax.servlet.jsp.PageContext pageContext;
    javax.servlet.http.HttpSession session = null;
    final javax.servlet.ServletContext application;
    final javax.servlet.ServletConfig config;
    javax.servlet.jsp.JspWriter out = null;
    final java.lang.Object page = this;
    javax.servlet.jsp.JspWriter _jspx_out = null;
    javax.servlet.jsp.PageContext _jspx_page_context = null;


    try {
      response.setContentType("text/html; charset=UTF-8");
      pageContext = _jspxFactory.getPageContext(this, request, response,
      			null, true, 8192, true);
      _jspx_page_context = pageContext;
      application = pageContext.getServletContext();
      config = pageContext.getServletConfig();
      session = pageContext.getSession();
      out = pageContext.getOut();
      _jspx_out = out;

      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("<!DOCTYPE html>\r\n");
      out.write("<html>\r\n");
      out.write("<head>\r\n");
      out.write("<meta charset=\"UTF-8\">\r\n");
      out.write("<title>회원 마이페이지</title>\r\n");
      out.write("<style>\r\n");
      out.write("\r\n");
      out.write("button{\r\n");
      out.write("    margin-top : 30px;\r\n");
      out.write("\tcursor: pointer;\r\n");
      out.write("\tmargin-right: 10px;\r\n");
      out.write("    background: #F57878;\r\n");
      out.write("    border-radius: 40px;\r\n");
      out.write("    border : 2px solid white;\r\n");
      out.write("\tcolor : white;\r\n");
      out.write("\r\n");
      out.write("}\r\n");
      out.write("button:hover {\r\n");
      out.write("\t\r\n");
      out.write("   background: #FFE6E6;\r\n");
      out.write("\tcolor : black;\r\n");
      out.write("\r\n");
      out.write("}\r\n");
      out.write("fieldset{\r\n");
      out.write("   \r\n");
      out.write("   margin-left :200px;;\r\n");
      out.write("   margin-top : 30px;\r\n");
      out.write("   width: 400px;\r\n");
      out.write("   height: 200px;\r\n");
      out.write("   border: 4px solid #CD5C5C;\r\n");
      out.write("}\r\n");
      out.write("legend{\r\n");
      out.write("   color :  #D76464;\r\n");
      out.write("   border:  3px solid #CD5C5C;\r\n");
      out.write("}\r\n");
      out.write("\r\n");
      out.write("</style>\r\n");
      out.write("</head>\r\n");
      out.write("<body>\r\n");

StudentVO svo = (StudentVO)session.getAttribute("loginStd"); //구성원 
List<SharejoinVO> sjoinlist=(List<SharejoinVO>)request.getAttribute("joinlist");

      out.write("\r\n");
      out.write("<div>\r\n");
      out.write("<button id=\"change\">회원정보수정</button>\r\n");
      out.write("<button id=\"back\">뒤로돌아가기</button>\r\n");
      out.write("<form id=\"fund\">\r\n");
      out.write("    <fieldset>\r\n");
      out.write("        <legend>펀딩</legend>\r\n");
      out.write("\r\n");
      out.write("    </fieldset>\r\n");
      out.write("</form>\r\n");
      out.write("\r\n");
      out.write("<form id=\"nanum\">\r\n");
      out.write("<fieldset>\r\n");
      out.write("  <legend>나눔</legend>\r\n");

int count=0; //나눔신청횟수를 세는 변수 
	if (svo != null) {
		for (int i = 0; i < sjoinlist.size(); i++) {
			if(svo.getStd_id()==sjoinlist.get(i).getStd_id())
				count++;
		}
	}

      out.write("\r\n");
      out.write("<p>나눔참여횟수 : ");
      out.print(count);
      out.write("</p>\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("</fieldset>\r\n");
      out.write("</form>\r\n");
      out.write("\r\n");
      out.write("</div>\r\n");
      out.write("</body>\r\n");
      out.write("</html>");
    } catch (java.lang.Throwable t) {
      if (!(t instanceof javax.servlet.jsp.SkipPageException)){
        out = _jspx_out;
        if (out != null && out.getBufferSize() != 0)
          try {
            if (response.isCommitted()) {
              out.flush();
            } else {
              out.clearBuffer();
            }
          } catch (java.io.IOException e) {}
        if (_jspx_page_context != null) _jspx_page_context.handlePageException(t);
        else throw new ServletException(t);
      }
    } finally {
      _jspxFactory.releasePageContext(_jspx_page_context);
    }
  }
}
